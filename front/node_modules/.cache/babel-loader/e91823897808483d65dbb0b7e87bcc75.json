{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\antoi\\\\Desktop\\\\Projet Cartes \\xE2ge\\\\Carte_age\\\\front\\\\src\\\\Container\\\\decks\\\\Decks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"../../App.css\";\nimport { Link } from 'react-router-dom';\nimport { getAllRecipes } from '../../api/vanguardDB';\nimport Card from '../../Components/Card/Card';\nimport { editRecipes } from '../../api/vanguardDB';\nimport { createRecipes } from '../../api/vanguardDB'; //c'est un espace communautaire ressemblant à un forum où les gens peuvent partager leurs conceptions de decks\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Decks() {\n  _s();\n\n  //il s'agit d'abord de récup les recettes de deck\n  const [recipes, setRecipes] = useState([]);\n  const [deck, setDeckName] = useState(\"\");\n  const [deckList, setDeckList] = useState(\"\");\n  useEffect(() => {\n    getAllRecipes().then(res => {\n      console.log(res);\n      setRecipes(res.result.recipes);\n    });\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const data = {\n      deck: deck,\n      deckList: deckList\n    };\n    createRecipes(data).then(res => {\n      if (res.status === 200) {\n        localStorage.setItem(res.result);\n      }\n    });\n  }; //on les map, soit on les boucle en return pour les afficher toutes\n  //Faire un formulaire pour\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ici, partagez vos decks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Afin de parfaire votre deck, soumettez le \\xE0 l'avis de vos pairs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Veuillez s'il vous plait rester courtois, les contrevenants s'exposent \\xE0 des bannissements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: \"formPostDeck\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Nom du deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setDeckName(e.target.value),\n        className: \"inputDeck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Contenu de votre deck:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setDeckList(e.target.value),\n        className: \"inputDeck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Poster le deck\",\n        className: \"inputDeck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), recipes.map(recipe => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"DeckRecipe/:id\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Decks, \"I+csmanhB2a/kuPHSXnj+gC4jk8=\");\n\n_c = Decks;\nexport default Decks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Decks\");","map":{"version":3,"sources":["C:/Users/antoi/Desktop/Projet Cartes âge/Carte_age/front/src/Container/decks/Decks.js"],"names":["React","useEffect","useState","Link","getAllRecipes","Card","editRecipes","createRecipes","Decks","recipes","setRecipes","deck","setDeckName","deckList","setDeckList","then","res","console","log","result","submitHandler","e","preventDefault","data","status","localStorage","setItem","target","value","map","recipe","name","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"../../App.css\"\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllRecipes } from '../../api/vanguardDB';\r\nimport Card from '../../Components/Card/Card';\r\nimport { editRecipes } from '../../api/vanguardDB';\r\nimport { createRecipes } from '../../api/vanguardDB';\r\n\r\n//c'est un espace communautaire ressemblant à un forum où les gens peuvent partager leurs conceptions de decks\r\n\r\nfunction Decks() {\r\n\r\n    //il s'agit d'abord de récup les recettes de deck\r\n\r\n    const [recipes, setRecipes] = useState([])\r\n    const [deck, setDeckName] = useState(\"\");\r\n    const [deckList, setDeckList] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        getAllRecipes().then((res) => {\r\n            console.log(res)\r\n            setRecipes(res.result.recipes)\r\n        })\r\n    }, []);   \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            deck: deck,\r\n            deckList: deckList,\r\n        };\r\n\r\n        createRecipes(data).then((res) => {\r\n            if(res.status === 200){\r\n                localStorage.setItem(res.result)\r\n                \r\n            }\r\n        });\r\n    };\r\n\r\n     //on les map, soit on les boucle en return pour les afficher toutes\r\n    //Faire un formulaire pour\r\n    return (                      \r\n          \r\n        <main>\r\n\r\n        \r\n\r\n        <h2>Ici, partagez vos decks</h2>\r\n        <h3>Afin de parfaire votre deck, soumettez le à l'avis de vos pairs</h3>\r\n        <p>Veuillez s'il vous plait rester courtois, les contrevenants s'exposent à des bannissements</p>\r\n\r\n        <form onSubmit={submitHandler} className=\"formPostDeck\">\r\n\r\n                <label> Nom du deck</label>\r\n                <input type =\"text\" onChange={(e) => setDeckName(e.target.value)}\r\n                className=\"inputDeck\"/>\r\n\r\n                <label> Contenu de votre deck:</label>\r\n                <input type =\"text\" onChange={(e) => setDeckList(e.target.value)}\r\n                className=\"inputDeck\"/>\r\n\r\n                <input type=\"submit\" value=\"Poster le deck\" className=\"inputDeck\" />\r\n\r\n            </form>\r\n        \r\n\r\n        \r\n        \r\n        \r\n        {recipes.map((recipe) => {\r\n\r\n            return(\r\n                <Card key={recipe.id}>\r\n\r\n                    <Link to={\"DeckRecipe/:id\"}><h3>{recipe.name}</h3></Link>\r\n                    \r\n                    \r\n\r\n                </Card>\r\n)\r\n})}\r\n\r\n\r\n        </main>\r\n                       \r\n)\r\n}\r\n\r\nexport default Decks"]},"metadata":{},"sourceType":"module"}