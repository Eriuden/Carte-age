{"ast":null,"code":"import { MODIFY_CART } from \"./actions-types\";\nexport const addToCart = (cart, newProduct) => {\n  return function (dispatch) {\n    let same = cart.findIndex(cartIndexFound => cartIndexFound.id === newProduct.id);\n\n    if (same === -1) {\n      newProduct.quantity = 1;\n      cart.push(newProduct);\n    } else {\n      cart[same].quantity += 1;\n    }\n\n    dispatch({\n      type: MODIFY_CART,\n      payload: cart\n    });\n  };\n};\nexport const deleteToCart = (cart, product) => {\n  return function (dispatch) {\n    let newcart = cart.filter(filteredCart => filteredCart.id !== product.id);\n    dispatch({\n      type: MODIFY_CART,\n      payload: newcart\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/antoi/Desktop/Projet Cartes Ã¢ge/Carte_age/front/src/redux/actions/cartAction.js"],"names":["MODIFY_CART","addToCart","cart","newProduct","dispatch","same","findIndex","cartIndexFound","id","quantity","push","type","payload","deleteToCart","product","newcart","filter","filteredCart"],"mappings":"AAAA,SAASA,WAAT,QAA2B,iBAA3B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;AAC3C,SAAO,UAAUC,QAAV,EAAoB;AACvB,QAAIC,IAAI,GAAGH,IAAI,CAACI,SAAL,CAAgBC,cAAD,IAAoBA,cAAc,CAACC,EAAf,KAAsBL,UAAU,CAACK,EAApE,CAAX;;AAEA,QAAIH,IAAI,KAAK,CAAC,CAAd,EAAiB;AACbF,MAAAA,UAAU,CAACM,QAAX,GAAsB,CAAtB;AACAP,MAAAA,IAAI,CAACQ,IAAL,CAAUP,UAAV;AACH,KAHD,MAGO;AACHD,MAAAA,IAAI,CAACG,IAAD,CAAJ,CAAWI,QAAX,IAAuB,CAAvB;AACH;;AAEDL,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEX,WADD;AAELY,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GAdD;AAeH,CAhBM;AAkBP,OAAO,MAAMW,YAAY,GAAG,CAACX,IAAD,EAAOY,OAAP,KAAmB;AAC3C,SAAO,UAAUV,QAAV,EAAoB;AACvB,QAAIW,OAAO,GAAGb,IAAI,CAACc,MAAL,CAAaC,YAAD,IAAkBA,YAAY,CAACT,EAAb,KAAoBM,OAAO,CAACN,EAA1D,CAAd;AACAJ,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEX,WADD;AAELY,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAIH,GAND;AAOH,CARM","sourcesContent":["import { MODIFY_CART} from \"./actions-types\";\r\n\r\nexport const addToCart = (cart, newProduct) => {\r\n    return function (dispatch) {\r\n        let same = cart.findIndex((cartIndexFound) => cartIndexFound.id === newProduct.id);\r\n        \r\n        if (same === -1) {\r\n            newProduct.quantity = 1;\r\n            cart.push(newProduct);\r\n        } else {\r\n            cart[same].quantity += 1;\r\n        }\r\n\r\n        dispatch({\r\n            type: MODIFY_CART,\r\n            payload: cart,\r\n        });\r\n    };\r\n};\r\n\r\nexport const deleteToCart = (cart, product) => {\r\n    return function (dispatch) {\r\n        let newcart = cart.filter((filteredCart) => filteredCart.id !== product.id);\r\n        dispatch({\r\n            type: MODIFY_CART,\r\n            payload: newcart,\r\n        });\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}