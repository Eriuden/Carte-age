{"ast":null,"code":"import { MODIFY_CART, CLEAN_CART } from \"./actions-types\";\nexport const addToCart = (cart, newProduct, quantityAdded) => {\n  return function (dispatch) {\n    //Si notre panier n'est pas vide, on trouvera un index\n    let same = cart.findIndex(cartIndexFound => cartIndexFound.id === newProduct.id); //si same est -1; le produit n'y est pas et on l'ajoute\n\n    if (same === -1) {\n      newProduct.quantity = parseInt(quantityAdded);\n      cart.push(newProduct);\n    } else {\n      //Si il y est, alors on dit juste \"un de plus dans le panier\"\n      cart[same].quantity += parseInt(quantityAdded);\n    }\n\n    let locStorCart = JSON.stringify(cart);\n    window.localStorage.setItem('cart-age', locStorCart);\n    dispatch({\n      type: MODIFY_CART,\n      payload: cart\n    });\n  };\n};\nexport const deleteToCart = (cart, product) => {\n  return function (dispatch) {\n    let newcart = cart.filter(filteredCart => filteredCart.id !== product.id);\n    dispatch({\n      type: MODIFY_CART,\n      payload: newcart\n    });\n  };\n};\nexport const CleanCart = () => {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAN_CART,\n      payload: null\n    });\n  };\n};\n_c = CleanCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CleanCart\");","map":{"version":3,"sources":["C:/Users/antoi/Desktop/Projet Cartes Ã¢ge/Carte_age/front/src/redux/actions/cartAction.js"],"names":["MODIFY_CART","CLEAN_CART","addToCart","cart","newProduct","quantityAdded","dispatch","same","findIndex","cartIndexFound","id","quantity","parseInt","push","locStorCart","JSON","stringify","window","localStorage","setItem","type","payload","deleteToCart","product","newcart","filter","filteredCart","CleanCart"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,QAAuC,iBAAvC;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAkBC,aAAlB,KAAoC;AACzD,SAAO,UAAUC,QAAV,EAAoB;AACvB;AACA,QAAIC,IAAI,GAAGJ,IAAI,CAACK,SAAL,CAAgBC,cAAD,IAAoBA,cAAc,CAACC,EAAf,KAAsBN,UAAU,CAACM,EAApE,CAAX,CAFuB,CAGvB;;AACA,QAAIH,IAAI,KAAK,CAAC,CAAd,EAAiB;AACbH,MAAAA,UAAU,CAACO,QAAX,GAAsBC,QAAQ,CAACP,aAAD,CAA9B;AACAF,MAAAA,IAAI,CAACU,IAAL,CAAUT,UAAV;AACH,KAHD,MAGO;AACP;AACID,MAAAA,IAAI,CAACI,IAAD,CAAJ,CAAWI,QAAX,IAAuBC,QAAQ,CAACP,aAAD,CAA/B;AACH;;AAED,QAAIS,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAlB;AACAc,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCL,WAAxC;AAEAR,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAEpB,WADD;AAELqB,MAAAA,OAAO,EAAElB;AAFJ,KAAD,CAAR;AAIH,GAnBD;AAoBH,CArBM;AAuBP,OAAO,MAAMmB,YAAY,GAAG,CAACnB,IAAD,EAAOoB,OAAP,KAAmB;AAC3C,SAAO,UAAUjB,QAAV,EAAoB;AACvB,QAAIkB,OAAO,GAAGrB,IAAI,CAACsB,MAAL,CAAaC,YAAD,IAAkBA,YAAY,CAAChB,EAAb,KAAoBa,OAAO,CAACb,EAA1D,CAAd;AACAJ,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAEpB,WADD;AAELqB,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAIH,GAND;AAOH,CARM;AAUP,OAAO,MAAMG,SAAS,GAAG,MAAM;AAC3B,SAAO,UAASrB,QAAT,EAAkB;AACrBA,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAEnB,UADD;AAELoB,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;AAMH,CAPM;KAAMM,S","sourcesContent":["import { MODIFY_CART, CLEAN_CART} from \"./actions-types\";\r\n\r\nexport const addToCart = (cart, newProduct,quantityAdded) => {\r\n    return function (dispatch) {\r\n        //Si notre panier n'est pas vide, on trouvera un index\r\n        let same = cart.findIndex((cartIndexFound) => cartIndexFound.id === newProduct.id);\r\n        //si same est -1; le produit n'y est pas et on l'ajoute\r\n        if (same === -1) {\r\n            newProduct.quantity = parseInt(quantityAdded);\r\n            cart.push(newProduct);\r\n        } else {\r\n        //Si il y est, alors on dit juste \"un de plus dans le panier\"\r\n            cart[same].quantity += parseInt(quantityAdded);\r\n        }\r\n\r\n        let locStorCart = JSON.stringify(cart);\r\n        window.localStorage.setItem('cart-age', locStorCart)\r\n\r\n        dispatch({\r\n            type: MODIFY_CART,\r\n            payload: cart,\r\n        });\r\n    };\r\n};\r\n\r\nexport const deleteToCart = (cart, product) => {\r\n    return function (dispatch) {\r\n        let newcart = cart.filter((filteredCart) => filteredCart.id !== product.id);\r\n        dispatch({\r\n            type: MODIFY_CART,\r\n            payload: newcart,\r\n        });\r\n    };\r\n};\r\n\r\nexport const CleanCart = () => {\r\n    return function(dispatch){\r\n        dispatch({\r\n            type: CLEAN_CART,\r\n            payload: null\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}